#include <stdlib.h>                                                         
                                                                            
                                                                            
//#ifndef lint                                                              
//static char yysccsid[] = "@(#)Boascript.cpp 1.6 06/08/2010";                   
//#endif                                                                    
                                                                            
                                                                            
#define YYBYACC 1                                                           
#define YYMAJOR 1                                                           
#define YYMINOR 9                                                           
#define yyclearin    (yychar     = (-1))                                    
#define yyerrok      (yyerrflag  = 0)                                       
#define YYRECOVERING (yyerrflag! = 0)                                       
#define YYPREFIX "yy"


#include "Boascript.tab.h"

#define YYERRCODE 256

static const short yylhs[] = 
{                                                        -1,
    5,    0,    4,    4,    1,    1,    1,    1,    1,    1,
    1,    1,    1,    1,    1,    1,    3,    3,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,
};


static const short yylen[] = 
{                                                         2,
    0,    2,    2,    0,    1,    1,    2,    3,    3,    3,
    3,    5,    5,    7,    3,    1,    1,    2,    1,    1,
    1,    1,    3,    2,    3,    3,    3,    3,    3,    3,
    3,    3,    3,    3,    2,    2,    3,    3,    3,    3,
    3,    3,    3,    3,    3,    3,    2,    3,    3,    4,
    4,    4,    4,    6,    4,    4,    4,    4,    4,    4,
    6,    6,    6,    4,    4,    6,    6,    3,    4,    4,
    4,    4,    4,    4,    3,    6,    6,    5,    4,    4,
    4,    8,   10,    8,    6,    4,    8,    8,    4,    3,
    3,
};


static const short yydefred[] = 
{                                                         1,
    0,    4,    0,   19,   20,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    6,   16,    0,    0,    0,    0,    5,    0,    0,
    3,    0,    0,    0,    0,    0,   21,   22,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   47,   24,   35,   36,    0,   17,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    7,    0,    0,    0,    0,    8,    9,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   75,    0,    0,   91,    0,   90,   23,   15,
   18,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   80,
    0,    0,    0,   81,   79,   50,   51,   52,   53,    0,
   55,   56,   57,   58,   59,   60,    0,    0,    0,   64,
   65,    0,    0,   69,   70,   71,   72,   73,   74,    0,
    0,   86,    0,   89,    0,   12,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   54,   61,
   62,   63,   66,   67,   76,   77,   85,   14,    0,    0,
    0,    0,    0,   87,   88,   82,    0,   84,    0,   83,
};


static const short yydgoto[] = 
{                     1,
   61,   62,  117,    3,    2,
};

static const short yysindex[] = 
{                                                         0,
    0,    0, 4465,    0,    0,  -61, -124,  -37,  -36, 4524,
 4524,  -34,  -33,  -31,  -28,  -23,  -21,  -19,  -18,  -17,
  -16,  -15,  -14,  -13,  -12,  -11,  -10,   -9,   -8,   -7,
   -5,   -4,   -3,    7,    9,   10,   11,   12,   13,   14,
   15,   16,   17,   18,   26,   28,   30,   31,   32,   33,
   34,    0,    0, 4524, 4524, 4524, 4524,    0, 4524, 4465,
    0,  862, 4524, 4524, 4524, 4524,    0,    0, 1237, 1612,
 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524,
 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524,
 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524,
 4524, 4524, 4524, 4524,  -30, 4524, 4524,   -1, 4524,   35,
    0,    0,    0,    0, 1987,    0, 4374, 4524, 4524, 4524,
 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524,
 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524, 4524,
 4524,    0, 7491, 7491, 2362, 2737,    0,    0, 3092, 4924,
 4951, 4965, 5039, 5066, 5080, 5094, 5108, 5135, 5250, 5278,
 5420, 5434, 5448, 5462, 5489, 5563, 5577, 5591, 5618, 5632,
 5775, 5917, 5931, 5945, 5959, 5986, 6019, 6060, 6074, 6088,
 6115, 6129,    0, 6414, 6428,    0, 6442,    0,    0,    0,
    0, 7491, 7491, 7491, 7491, 7491, 6456,  481,  481,  137,
  137,  153,  153,  122,  122,  122,  122,  -29,  -29,  -27,
  -27,   -6,   -6,   -6,   -6, 4465, 4465, 4524, 4524,    0,
 4524, 4524, 4524,    0,    0,    0,    0,    0,    0, 4524,
    0,    0,    0,    0,    0,    0, 4524, 4524, 4524,    0,
    0, 4524, 4524,    0,    0,    0,    0,    0,    0, 4524,
 4524,    0, 4524,    0, 4524,    0, -233, 6483, 6497, 6511,
 6525, 6552, 6585, 6626, 6870, 6911, 6925, 6939, 6966, 6980,
 7009,  110, 4465, 4524, 4524, 4524, 4524, 4524,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0, 7038, 7074,
 7109, 7394, 7408,    0,    0,    0, 4524,    0, 7422,    0,
};

static const short yyrindex[] = 
{                                                         0,
    0,    0,   77,    0,    0, 7436, 7463,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0, 4006, 4073,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 3386, 3502, 3570, 3696, 3880,    0, 3001, 3069, 2626,
 2694, 2251, 2319, 1501, 1569, 1876, 1944, 1126, 1194,  751,
  819,    1,   69,  376,  444,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 4190,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 3195,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
};

static const short yygindex[] = 
{                     0,
  -55, 4819,    0,    0,    0,
};



#define YYTABLESIZE 7812

static const short yytable[] = 
{63,
   27,   64,   65,   66,  116,   71,   72,  140,   73,  140,
  183,   74,  138,  136,  138,  137,   75,  139,   76,  139,
   77,   78,   79,   80,   81,   82,   83,   84,   85,   86,
   87,   88,   89,   27,   90,   91,   92,   27,   27,  186,
   27,   27,   27,   27,   27,   27,   93,   27,   94,   95,
   96,   97,   98,   99,  100,  101,  102,  103,   27,   27,
   27,  191,   27,   27,  141,  104,  141,  105,   28,  106,
  107,  108,  109,  110,  273,  188,    2,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  141,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   28,    0,    0,    0,   28,   28,    0,   28,   28,
   28,   28,   28,   28,    0,   28,    0,    0,    0,    0,
    0,    0,    0,   27,   27,   27,   28,   28,   28,    0,
   28,   28,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  140,  126,    0,    0,
    0,  138,  136,    0,  137,    0,  139,    0,  140,    0,
  256,  257,    0,  138,  136,    0,  137,    0,  139,  133,
    0,  132,  123,  140,    0,    0,    0,    0,  138,  136,
    0,  137,    0,  139,    0,    0,    0,    0,    0,  140,
    0,   28,   28,   28,  138,  136,  133,  137,  132,  139,
    0,    0,    0,  141,    0,    0,    0,    0,    0,    0,
    0,    0,  133,    0,  132,  141,    0,  288,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  141,    0,    0,  127,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  141,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   27,   27,   27,
   27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
   27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
   27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
   27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
   27,   27,   27,   27,   27,   27,   27,    0,   27,   27,
   27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
   27,   27,   27,   27,    0,   28,   28,   28,   28,   28,
   28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
   28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
   28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
   28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
   28,   28,   28,   28,   28,   29,   28,   28,   28,   28,
   28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
   28,   28,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   29,    0,
    0,    0,   29,   29,    0,   29,   29,   29,   29,   29,
   29,    0,   29,  124,  125,  128,  129,  130,  131,  134,
  135,    0,    0,   29,   29,   29,    0,   29,   29,    0,
    0,  134,  135,   68,    0,    0,    0,    0,    0,    0,
    0,    0,  128,  129,  130,  131,  134,  135,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  130,  131,  134,  135,    0,    0,   68,    0,    0,    0,
   68,   68,    0,   68,   68,   68,   68,   68,   68,    0,
   68,    0,    0,    0,    0,    0,    0,    0,   29,   29,
   29,   68,   68,   68,    0,   68,   68,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  140,  126,    0,
    0,    0,  138,  136,    0,  137,    0,  139,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  133,    0,  132,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   68,   68,   68,    0,
    0,    0,    0,    0,  141,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  127,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   29,   29,   29,   29,   29,   29,   29,   29,
   29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
   29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
   29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
   29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
   29,   29,    0,   29,   29,   29,   29,   29,   29,   29,
   29,   29,   29,   29,   29,   29,   29,   29,   29,    0,
   68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
   68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
   68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
   68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
   68,   68,   68,   68,   68,   68,   68,   68,   68,   68,
   25,   68,   68,   68,   68,   68,   68,   68,   68,   68,
   68,   68,   68,   68,   68,   68,   68,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   25,    0,    0,    0,    0,   25,    0,
   25,   25,    0,   25,   25,   25,  128,  129,  130,  131,
  134,  135,    0,    0,    0,    0,    0,    0,   25,   25,
   25,    0,   25,   25,    0,    0,    0,    0,   26,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   26,    0,    0,    0,    0,   26,    0,   26,   26,
    0,   26,   26,   26,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   25,   25,   25,   26,   26,   26,    0,
   26,   26,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  140,  126,
    0,    0,    0,  138,  136,    0,  137,    0,  139,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  142,  133,    0,  132,  123,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   26,   26,   26,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  141,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  127,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,    0,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,    0,   26,   26,   26,   26,   26,
   26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
   26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
   26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
   26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
   26,   26,   26,   26,   26,   48,   26,   26,   26,   26,
   26,   26,   26,   26,   26,   26,   26,   26,   26,   26,
   26,   26,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   48,    0,
    0,    0,    0,   48,    0,   48,   48,    0,    0,   48,
  118,  119,  120,  121,  122,  124,  125,  128,  129,  130,
  131,  134,  135,   48,   48,   48,    0,   48,   48,    0,
    0,    0,    0,   49,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   49,    0,    0,    0,
    0,   49,    0,   49,   49,    0,    0,   49,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   48,   48,
   48,   49,   49,   49,    0,   49,   49,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  140,  126,    0,    0,    0,  138,  136,
    0,  137,    0,  139,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  147,  133,    0,  132,  123,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   49,   49,   49,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  141,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  127,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   48,   48,   48,   48,   48,   48,   48,   48,
   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
   48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
   48,   48,    0,   48,   48,   48,   48,   48,   48,   48,
   48,   48,   48,   48,   48,   48,   48,   48,   48,    0,
   49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
   49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
   49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
   49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
   49,   49,   49,   49,   49,   49,   49,   49,   49,   49,
   39,   49,   49,   49,   49,   49,   49,   49,   49,   49,
   49,   49,   49,   49,   49,   49,   49,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   39,    0,    0,    0,    0,   39,    0,
   39,   39,    0,    0,   39,  118,  119,  120,  121,  122,
  124,  125,  128,  129,  130,  131,  134,  135,   39,   39,
   39,    0,   39,   39,    0,    0,    0,    0,   40,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   40,    0,    0,    0,    0,   40,    0,   40,   40,
    0,    0,   40,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   39,   39,   39,   40,   40,   40,    0,
   40,   40,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  140,  126,
    0,    0,    0,  138,  136,    0,  137,    0,  139,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  148,  133,    0,  132,  123,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   40,   40,   40,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  141,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  127,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   39,   39,   39,
   39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
   39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
   39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
   39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
   39,   39,   39,   39,   39,   39,   39,    0,   39,   39,
   39,   39,   39,   39,   39,   39,   39,   39,   39,   39,
    0,    0,   39,   39,    0,   40,   40,   40,   40,   40,
   40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
   40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
   40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
   40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
   40,   40,   40,   40,   40,   38,   40,   40,   40,   40,
   40,   40,   40,   40,   40,   40,   40,   40,    0,    0,
   40,   40,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   38,    0,
    0,    0,    0,   38,    0,   38,   38,    0,    0,   38,
  118,  119,  120,  121,  122,  124,  125,  128,  129,  130,
  131,  134,  135,   38,   38,   38,    0,   38,   38,    0,
    0,    0,    0,   37,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   37,    0,    0,    0,
    0,   37,    0,   37,   37,    0,    0,   37,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   38,   38,
   38,   37,   37,   37,    0,   37,   37,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  140,  126,    0,    0,  189,  138,  136,
    0,  137,    0,  139,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  133,    0,  132,  123,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   37,   37,   37,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  141,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  127,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   38,   38,   38,   38,   38,   38,   38,   38,
   38,   38,   38,   38,   38,   38,   38,   38,   38,   38,
   38,   38,   38,   38,   38,   38,   38,   38,   38,   38,
   38,   38,   38,   38,   38,   38,   38,   38,   38,   38,
   38,   38,   38,   38,   38,   38,   38,   38,   38,   38,
   38,   38,    0,   38,   38,   38,   38,   38,   38,   38,
   38,   38,   38,   38,   38,    0,    0,   38,   38,    0,
   37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
   37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
   37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
   37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
   37,   37,   37,   37,   37,   37,   37,   37,   37,   37,
   42,   37,   37,   37,   37,   37,   37,   37,   37,   37,
   37,   37,   37,    0,    0,   37,   37,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   42,    0,    0,    0,    0,   42,    0,
   42,   42,    0,    0,   42,  118,  119,  120,  121,  122,
  124,  125,  128,  129,  130,  131,  134,  135,   42,   42,
    0,    0,    0,   42,    0,    0,    0,    0,   41,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   41,    0,    0,    0,    0,   41,    0,   41,   41,
    0,    0,   41,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   42,   42,   42,   41,   41,    0,    0,
    0,   41,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  140,  126,
    0,    0,  216,  138,  136,    0,  137,    0,  139,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  133,    0,  132,  123,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   41,   41,   41,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  141,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  127,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   42,   42,   42,
   42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
   42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
   42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
   42,   42,   42,   42,   42,   42,   42,   42,   42,   42,
   42,   42,   42,   42,   42,   42,   42,    0,   42,   42,
   42,   42,   42,   42,   42,   42,   42,   42,    0,    0,
    0,    0,   42,   42,    0,   41,   41,   41,   41,   41,
   41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
   41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
   41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
   41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
   41,   41,   41,   41,   41,   45,   41,   41,   41,   41,
   41,   41,   41,   41,   41,   41,    0,    0,    0,    0,
   41,   41,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   45,    0,
    0,    0,    0,   45,    0,   45,   45,    0,    0,   45,
  118,  119,  120,  121,  122,  124,  125,  128,  129,  130,
  131,  134,  135,   45,   45,    0,    0,    0,   45,    0,
    0,    0,    0,   46,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   46,    0,    0,    0,
    0,   46,    0,   46,   46,    0,    0,   46,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   45,   45,
   45,   46,   46,    0,    0,    0,   46,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  140,  126,    0,    0,  217,  138,  136,
    0,  137,    0,  139,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  133,    0,  132,  123,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   46,   46,   46,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  141,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  127,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   45,   45,   45,   45,   45,   45,   45,   45,
   45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
   45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
   45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
   45,   45,   45,   45,   45,   45,   45,   45,   45,   45,
   45,   45,    0,   45,   45,   45,   45,   45,   45,   45,
   45,    0,    0,    0,    0,    0,    0,   45,   45,    0,
   46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
   46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
   46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
   46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
   46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
   43,   46,   46,   46,   46,   46,   46,   46,   46,    0,
    0,    0,    0,    0,    0,   46,   46,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   43,    0,    0,    0,    0,    0,    0,
   43,   43,    0,    0,   43,  118,  119,  120,  121,  122,
  124,  125,  128,  129,  130,  131,  134,  135,   43,   43,
    0,    0,    0,   43,    0,    0,    0,    0,   44,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   44,    0,    0,    0,    0,    0,    0,   44,   44,
    0,    0,   44,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   43,    0,   43,   44,   44,  140,  126,
    0,   44,    0,  138,  136,  218,  137,    0,  139,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  133,    0,  132,  123,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  141,    0,    0,    0,    0,
    0,   44,    0,   44,   78,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  127,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   78,    0,    0,
    0,    0,    0,    0,   78,   78,    0,    0,   78,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   78,   78,    0,    0,    0,   43,   43,   43,
   43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
   43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
   43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
   43,   43,   43,   43,   43,   43,   43,   43,   43,   43,
   43,   43,   43,   43,   43,   43,   43,    0,   43,   43,
   43,   43,   43,   43,   43,   43,    0,   78,    0,   78,
    0,    0,   43,   43,    0,   44,   44,   44,   44,   44,
   44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
   44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
   44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
   44,   44,   44,   44,   44,   44,   44,   44,   44,   44,
   44,   44,   44,   44,   44,    0,   44,   44,   44,   44,
   44,   44,   44,   44,    0,   30,    0,    0,    0,    0,
   44,   44,    0,    0,    0,    0,    0,    0,    0,    0,
  118,  119,  120,  121,  122,  124,  125,  128,  129,  130,
  131,  134,  135,    0,    0,    0,    0,    0,   30,    0,
    0,    0,    0,    0,    0,   30,   30,    0,    0,   30,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   30,   30,    0,    0,    0,    0,    0,
    0,   78,   78,   78,   78,   78,   78,   78,   78,   78,
   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
   78,   78,   78,   78,   78,   78,   78,   78,   78,   78,
   78,   31,   78,   78,   78,   78,   78,   78,   30,    0,
   30,    0,    0,    0,    0,    0,   78,   78,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   31,    0,    0,    0,    0,    0,
    0,   31,   31,    0,    0,   31,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   31,
   31,    0,    0,    0,    0,    0,    0,    0,    0,   32,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   32,    0,    0,    0,    0,    0,    0,   32,
   32,    0,    0,   32,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   31,    0,   31,   32,   32,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   30,   30,   30,   30,   30,   30,   30,   30,
   30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
   30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
   30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
   30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
   30,   30,   32,   30,   32,   33,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   30,   30,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   33,    0,
    0,    0,    0,    0,    0,   33,   33,    0,    0,   33,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   33,   33,    0,    0,    0,   31,   31,
   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
   31,   31,   31,   31,   31,   31,   31,   31,   31,   31,
   31,   31,   31,   31,   31,   31,   31,   31,    0,   31,
    0,    0,    0,    0,    0,    0,    0,    0,   33,    0,
   33,    0,    0,   31,   31,    0,   32,   32,   32,   32,
   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
   32,   32,   32,   32,   32,   32,   32,   32,   32,   32,
   32,   32,   32,   32,   32,   32,    0,   32,    0,   34,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   32,   32,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   34,    0,    0,    0,    0,    0,    0,   34,
   34,    0,    0,   34,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   34,   34,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   33,   33,   33,   33,   33,   33,   33,   33,
   33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
   33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
   33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
   33,   33,   33,   33,   33,   33,   33,   33,   33,   33,
   33,   33,   34,   33,   34,   10,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   33,   33,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   10,    0,
    0,    0,    0,    0,    0,   10,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   10,    0,    0,    0,    0,    0,
    0,    0,   11,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   11,    0,    0,    0,    0,
    0,    0,   11,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   10,    0,
   10,   11,    0,    0,    0,    0,   34,   34,   34,   34,
   34,   34,   34,   34,   34,   34,   34,   34,   34,   34,
   34,   34,   34,   34,   34,   34,   34,   34,   34,   34,
   34,   34,   34,   34,   34,   34,   34,   34,   34,   34,
   34,   34,   34,   34,   34,   34,   34,   34,   34,   34,
   34,   34,   34,   34,   34,   34,    0,   34,    0,   13,
    0,    0,    0,    0,    0,   11,    0,   11,    0,    0,
    0,   34,   34,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   13,    0,    0,    0,    0,    0,    0,   13,
    0,    0,    0,    0,   13,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   13,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   10,   10,   10,   10,   10,   10,   10,   10,
   10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
   10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
   10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
   10,   10,   10,   10,   10,   10,   10,   10,   10,   10,
   10,   10,   13,   10,   13,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   10,   10,   11,
   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
   11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
   11,   11,   11,   11,   11,   11,   11,   11,   11,    0,
   11,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   11,   11,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   54,    0,    0,    0,
    0,    0,    0,   59,    0,    0,    0,    0,   55,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   58,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   60,   54,  190,    0,
    0,    0,    0,    0,   59,    0,    0,    0,    0,   55,
    0,   13,   13,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   58,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   54,    0,    0,    0,
    0,    0,    0,   59,    0,    0,    0,    0,   55,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   60,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    4,    5,    6,    7,    8,    9,   10,   11,   12,   13,
   14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
   24,   25,   26,   27,   28,   29,   30,   31,   32,   33,
   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
   44,   45,   46,   47,   48,   49,   50,   51,   52,   53,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   56,   57,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    4,    5,    6,    7,    8,    9,   10,   11,   12,
   13,   14,   15,   16,   17,   18,   19,   20,   21,   22,
   23,   24,   25,   26,   27,   28,   29,   30,   31,   32,
   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,
   43,   44,   45,   46,   47,   48,   49,   50,   51,   52,
   53,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    4,    5,   67,   68,    0,    0,   56,   57,   12,   13,
   14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
   24,   25,   26,   27,   28,   29,   30,   31,   32,   33,
   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
   44,   45,   46,   47,   48,   49,   50,   51,   69,   70,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   56,   57,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  111,  112,  113,  114,    0,  115,    0,    0,
    0,  143,  144,  145,  146,    0,    0,    0,    0,  149,
  150,  151,  152,  153,  154,  155,  156,  157,  158,  159,
  160,  161,  162,  163,  164,  165,  166,  167,  168,  169,
  170,  171,  172,  173,  174,  175,  176,  177,  178,  179,
  180,  181,  182,    0,  184,  185,    0,  187,    0,    0,
    0,    0,    0,    0,    0,    0,  192,  193,  194,  195,
  196,  197,  198,  199,  200,  201,  202,  203,  204,  205,
  206,  207,  208,  209,  210,  211,  212,  213,  214,  215,
  140,  126,    0,    0,    0,  138,  136,  219,  137,    0,
  139,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  133,    0,  132,  123,  140,  126,    0,
    0,  220,  138,  136,    0,  137,    0,  139,    0,    0,
    0,  140,  126,    0,    0,    0,  138,  136,  221,  137,
  133,  139,  132,  123,    0,    0,    0,  141,    0,    0,
    0,    0,    0,    0,  133,    0,  132,  123,    0,    0,
    0,    0,    0,    0,    0,    0,  258,  259,    0,  260,
  261,  262,    0,    0,  141,    0,    0,  127,  263,    0,
    0,    0,    0,    0,    0,  264,  265,  266,  141,    0,
  267,  268,    0,    0,    0,    0,    0,    0,  269,  270,
    0,  271,    0,  272,  127,  140,  126,    0,    0,    0,
  138,  136,  222,  137,    0,  139,    0,    0,  127,    0,
    0,    0,  289,  290,  291,  292,  293,    0,  133,    0,
  132,  123,  140,  126,    0,    0,    0,  138,  136,  223,
  137,    0,  139,    0,    0,  299,  140,  126,    0,    0,
  224,  138,  136,    0,  137,  133,  139,  132,  123,    0,
  140,  126,  141,    0,  225,  138,  136,    0,  137,  133,
  139,  132,  123,    0,  140,  126,    0,    0,  226,  138,
  136,    0,  137,  133,  139,  132,  123,    0,    0,  141,
    0,    0,  127,    0,    0,    0,    0,  133,    0,  132,
  123,  140,  126,  141,    0,  227,  138,  136,    0,  137,
    0,  139,    0,    0,    0,    0,    0,  141,    0,  127,
    0,    0,    0,    0,  133,    0,  132,  123,    0,    0,
    0,  141,    0,  127,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  127,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  141,    0,
    0,  127,  118,  119,  120,  121,  122,  124,  125,  128,
  129,  130,  131,  134,  135,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  127,  118,
  119,  120,  121,  122,  124,  125,  128,  129,  130,  131,
  134,  135,    0,  118,  119,  120,  121,  122,  124,  125,
  128,  129,  130,  131,  134,  135,  140,  126,    0,    0,
  228,  138,  136,    0,  137,    0,  139,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  133,
    0,  132,  123,    0,  140,  126,    0,    0,  229,  138,
  136,    0,  137,    0,  139,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  133,    0,  132,
  123,    0,    0,  141,    0,    0,    0,  118,  119,  120,
  121,  122,  124,  125,  128,  129,  130,  131,  134,  135,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  141,    0,  127,  118,  119,  120,  121,  122,  124,
  125,  128,  129,  130,  131,  134,  135,    0,  118,  119,
  120,  121,  122,  124,  125,  128,  129,  130,  131,  134,
  135,  127,  118,  119,  120,  121,  122,  124,  125,  128,
  129,  130,  131,  134,  135,    0,  118,  119,  120,  121,
  122,  124,  125,  128,  129,  130,  131,  134,  135,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  118,  119,  120,  121,  122,  124,  125,
  128,  129,  130,  131,  134,  135,  140,  126,    0,    0,
    0,  138,  136,  230,  137,    0,  139,    0,    0,    0,
  140,  126,    0,    0,  231,  138,  136,    0,  137,  133,
  139,  132,  123,    0,  140,  126,    0,    0,  232,  138,
  136,    0,  137,  133,  139,  132,  123,    0,  140,  126,
    0,    0,  233,  138,  136,    0,  137,  133,  139,  132,
  123,    0,    0,  141,    0,    0,    0,    0,    0,    0,
    0,  133,    0,  132,  123,  140,  126,  141,    0,  234,
  138,  136,    0,  137,    0,  139,    0,    0,    0,    0,
    0,  141,    0,  127,    0,    0,    0,    0,  133,    0,
  132,  123,    0,    0,    0,  141,    0,  127,  118,  119,
  120,  121,  122,  124,  125,  128,  129,  130,  131,  134,
  135,  127,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  141,    0,    0,  127,  118,  119,  120,  121,
  122,  124,  125,  128,  129,  130,  131,  134,  135,  140,
  126,    0,    0,  235,  138,  136,    0,  137,    0,  139,
    0,    0,  127,  140,  126,    0,    0,  236,  138,  136,
    0,  137,  133,  139,  132,  123,    0,  140,  126,    0,
    0,    0,  138,  136,  237,  137,  133,  139,  132,  123,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  133,    0,  132,  123,  140,  126,  141,    0,    0,  138,
  136,  238,  137,    0,  139,    0,    0,    0,  140,  126,
  141,    0,    0,  138,  136,  239,  137,  133,  139,  132,
  123,    0,    0,    0,  141,    0,  127,    0,    0,    0,
    0,  133,    0,  132,  123,    0,    0,    0,    0,    0,
  127,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  141,    0,    0,  127,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  141,    0,    0,  118,  119,
  120,  121,  122,  124,  125,  128,  129,  130,  131,  134,
  135,  127,  118,  119,  120,  121,  122,  124,  125,  128,
  129,  130,  131,  134,  135,  127,  118,  119,  120,  121,
  122,  124,  125,  128,  129,  130,  131,  134,  135,    0,
  118,  119,  120,  121,  122,  124,  125,  128,  129,  130,
  131,  134,  135,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  118,  119,  120,
  121,  122,  124,  125,  128,  129,  130,  131,  134,  135,
    0,  140,  126,    0,    0,  240,  138,  136,    0,  137,
    0,  139,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  133,    0,  132,  123,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  141,    0,
    0,  118,  119,  120,  121,  122,  124,  125,  128,  129,
  130,  131,  134,  135,    0,  118,  119,  120,  121,  122,
  124,  125,  128,  129,  130,  131,  134,  135,  127,  118,
  119,  120,  121,  122,  124,  125,  128,  129,  130,  131,
  134,  135,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  118,  119,  120,  121,
  122,  124,  125,  128,  129,  130,  131,  134,  135,    0,
  118,  119,  120,  121,  122,  124,  125,  128,  129,  130,
  131,  134,  135,  140,  126,    0,    0,  241,  138,  136,
    0,  137,    0,  139,    0,    0,    0,  140,  126,    0,
    0,    0,  138,  136,  242,  137,  133,  139,  132,  123,
    0,  140,  126,    0,    0,    0,  138,  136,  243,  137,
  133,  139,  132,  123,    0,  140,  126,    0,    0,  244,
  138,  136,    0,  137,  133,  139,  132,  123,    0,    0,
  141,    0,    0,    0,    0,    0,    0,    0,  133,    0,
  132,  123,  140,  126,  141,    0,  245,  138,  136,    0,
  137,    0,  139,    0,    0,    0,    0,    0,  141,    0,
  127,    0,    0,    0,    0,  133,    0,  132,  123,    0,
    0,    0,  141,    0,  127,  140,  126,    0,    0,  246,
  138,  136,    0,  137,    0,  139,    0,    0,  127,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  133,  141,
  132,  123,  127,  118,  119,  120,  121,  122,  124,  125,
  128,  129,  130,  131,  134,  135,  140,  126,    0,    0,
  247,  138,  136,    0,  137,    0,  139,    0,    0,  127,
  140,  126,  141,    0,  248,  138,  136,    0,  137,  133,
  139,  132,  123,    0,  140,  126,    0,    0,  249,  138,
  136,    0,  137,  133,  139,  132,  123,    0,    0,    0,
    0,    0,  127,    0,    0,    0,    0,  133,    0,  132,
  123,  140,  126,  141,    0,    0,  138,  136,  250,  137,
    0,  139,    0,    0,    0,  140,  126,  141,    0,    0,
  138,  136,  251,  137,  133,  139,  132,  123,    0,    0,
    0,  141,    0,  127,    0,    0,    0,    0,  133,    0,
  132,  123,    0,    0,    0,    0,    0,  127,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  141,    0,
    0,  127,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  141,    0,    0,  118,  119,  120,  121,  122,
  124,  125,  128,  129,  130,  131,  134,  135,  127,  118,
  119,  120,  121,  122,  124,  125,  128,  129,  130,  131,
  134,  135,  127,  118,  119,  120,  121,  122,  124,  125,
  128,  129,  130,  131,  134,  135,    0,  118,  119,  120,
  121,  122,  124,  125,  128,  129,  130,  131,  134,  135,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  118,  119,  120,  121,  122,  124,
  125,  128,  129,  130,  131,  134,  135,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  118,  119,  120,
  121,  122,  124,  125,  128,  129,  130,  131,  134,  135,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  118,  119,
  120,  121,  122,  124,  125,  128,  129,  130,  131,  134,
  135,    0,  118,  119,  120,  121,  122,  124,  125,  128,
  129,  130,  131,  134,  135,    0,  118,  119,  120,  121,
  122,  124,  125,  128,  129,  130,  131,  134,  135,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  118,  119,  120,  121,  122,  124,  125,
  128,  129,  130,  131,  134,  135,    0,  118,  119,  120,
  121,  122,  124,  125,  128,  129,  130,  131,  134,  135,
  140,  126,    0,    0,  252,  138,  136,    0,  137,    0,
  139,    0,    0,    0,  140,  126,    0,    0,    0,  138,
  136,  253,  137,  133,  139,  132,  123,    0,  140,  126,
    0,    0,  254,  138,  136,    0,  137,  133,  139,  132,
  123,    0,  140,  126,    0,    0,    0,  138,  136,    0,
  137,  133,  139,  132,  123,    0,    0,  141,    0,    0,
    0,    0,    0,  255,    0,  133,    0,  132,  123,  140,
  126,  141,    0,    0,  138,  136,  274,  137,    0,  139,
    0,    0,    0,  140,  126,  141,    0,  127,  138,  136,
  275,  137,  133,  139,  132,  123,    0,  140,  126,  141,
    0,  127,  138,  136,  276,  137,  133,  139,  132,  123,
    0,  140,  126,    0,    0,  127,  138,  136,  277,  137,
  133,  139,  132,  123,    0,    0,  141,    0,    0,  127,
    0,    0,    0,    0,  133,    0,  132,  123,  140,  126,
  141,    0,    0,  138,  136,  278,  137,    0,  139,    0,
    0,    0,    0,    0,  141,    0,  127,    0,    0,    0,
    0,  133,    0,  132,  123,    0,    0,    0,  141,    0,
  127,  140,  126,    0,    0,  279,  138,  136,    0,  137,
    0,  139,    0,    0,  127,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  133,  141,  132,  123,  127,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  140,  126,    0,    0,  280,  138,  136,    0,
  137,    0,  139,    0,    0,  127,    0,    0,  141,    0,
    0,    0,    0,    0,    0,  133,    0,  132,  123,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  127,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  141,
    0,    0,  118,  119,  120,  121,  122,  124,  125,  128,
  129,  130,  131,  134,  135,    0,  118,  119,  120,  121,
  122,  124,  125,  128,  129,  130,  131,  134,  135,  127,
  118,  119,  120,  121,  122,  124,  125,  128,  129,  130,
  131,  134,  135,    0,  118,  119,  120,  121,  122,  124,
  125,  128,  129,  130,  131,  134,  135,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  118,  119,  120,  121,  122,  124,  125,  128,  129,
  130,  131,  134,  135,    0,  118,  119,  120,  121,  122,
  124,  125,  128,  129,  130,  131,  134,  135,    0,  118,
  119,  120,  121,  122,  124,  125,  128,  129,  130,  131,
  134,  135,    0,  118,  119,  120,  121,  122,  124,  125,
  128,  129,  130,  131,  134,  135,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  118,  119,  120,  121,  122,  124,  125,  128,  129,  130,
  131,  134,  135,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  118,  119,  120,  121,  122,  124,  125,
  128,  129,  130,  131,  134,  135,  140,  126,    0,    0,
  281,  138,  136,    0,  137,    0,  139,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  133,
    0,  132,  123,    0,  118,  119,  120,  121,  122,  124,
  125,  128,  129,  130,  131,  134,  135,  140,  126,    0,
    0,  282,  138,  136,    0,  137,    0,  139,    0,    0,
    0,  140,  126,  141,    0,  283,  138,  136,    0,  137,
  133,  139,  132,  123,    0,  140,  126,    0,    0,  284,
  138,  136,    0,  137,  133,  139,  132,  123,    0,    0,
    0,    0,    0,  127,    0,    0,    0,    0,  133,    0,
  132,  123,  140,  126,  141,    0,  285,  138,  136,    0,
  137,    0,  139,    0,    0,    0,  140,  126,  141,    0,
  286,  138,  136,    0,  137,  133,  139,  132,  123,    0,
    0,    0,  141,    0,  127,    0,    0,    0,    0,  133,
    0,  132,  123,    0,    0,  140,  126,    0,  127,  287,
  138,  136,    0,  137,    0,  139,    0,    0,    0,  141,
    0,    0,  127,    0,    0,    0,    0,    0,  133,    0,
  132,  123,    0,  141,  140,  126,    0,    0,  294,  138,
  136,    0,  137,    0,  139,    0,    0,    0,    0,  127,
    0,    0,    0,    0,    0,    0,    0,  133,    0,  132,
  123,    0,  141,  127,    0,    0,    0,    0,    0,    0,
  140,  126,    0,    0,  295,  138,  136,    0,  137,    0,
  139,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  141,  127,  133,    0,  132,  123,    0,    0,    0,
    0,    0,    0,    0,    0,  140,  126,    0,    0,  296,
  138,  136,    0,  137,    0,  139,    0,    0,    0,    0,
    0,  127,    0,    0,    0,    0,    0,  141,  133,    0,
  132,  123,    0,    0,    0,    0,    0,    0,  118,  119,
  120,  121,  122,  124,  125,  128,  129,  130,  131,  134,
  135,    0,    0,    0,    0,    0,    0,  127,    0,    0,
    0,    0,  141,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  118,
  119,  120,  121,  122,  124,  125,  128,  129,  130,  131,
  134,  135,  127,  118,  119,  120,  121,  122,  124,  125,
  128,  129,  130,  131,  134,  135,    0,  118,  119,  120,
  121,  122,  124,  125,  128,  129,  130,  131,  134,  135,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  118,  119,  120,  121,  122,  124,
  125,  128,  129,  130,  131,  134,  135,    0,  118,  119,
  120,  121,  122,  124,  125,  128,  129,  130,  131,  134,
  135,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  118,  119,  120,
  121,  122,  124,  125,  128,  129,  130,  131,  134,  135,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  118,  119,  120,  121,
  122,  124,  125,  128,  129,  130,  131,  134,  135,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  118,  119,  120,  121,  122,  124,  125,  128,
  129,  130,  131,  134,  135,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  118,  119,  120,
  121,  122,  124,  125,  128,  129,  130,  131,  134,  135,
  140,  126,    0,    0,    0,  138,  136,  297,  137,    0,
  139,    0,    0,    0,  140,  126,    0,    0,  298,  138,
  136,    0,  137,  133,  139,  132,  123,    0,  140,  126,
    0,    0,  300,  138,  136,    0,  137,  133,  139,  132,
  123,    0,   21,   21,    0,    0,    0,   21,   21,    0,
   21,  133,   21,  132,  123,    0,    0,  141,    0,    0,
    0,    0,    0,    0,   21,   21,    0,   21,   21,   22,
   22,  141,    0,    0,   22,   22,    0,   22,    0,   22,
    0,    0,    0,    0,    0,  141,    0,  127,    0,    0,
    0,   22,   22,    0,   22,   22,    0,  140,  126,   21,
    0,  127,  138,  136,    0,  137,    0,  139,    0,    0,
    0,    0,    0,    0,    0,  127,    0,    0,    0,    0,
  133,    0,  132,  123,    0,    0,   22,    0,    0,   21,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  141,    0,   22,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  127,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  118,  119,  120,  121,  122,  124,  125,  128,
  129,  130,  131,  134,  135,    0,  118,  119,  120,  121,
  122,  124,  125,  128,  129,  130,  131,  134,  135,    0,
  118,  119,  120,  121,  122,  124,  125,  128,  129,  130,
  131,  134,  135,    0,   21,   21,   21,   21,   21,   21,
   21,   21,   21,   21,   21,   21,   21,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   22,   22,   22,   22,   22,   22,   22,   22,   22,
   22,   22,   22,   22,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  118,
  119,  120,  121,  122,  124,  125,  128,  129,  130,  131,
  134,  135,
};


static const short yycheck[] = 
{                                                        61,
    0,  126,   40,   40,   60,   40,   40,   37,   40,   37,
   41,   40,   42,   43,   42,   45,   40,   47,   40,   47,
   40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
   40,   40,   40,   33,   40,   40,   40,   37,   38,   41,
   40,   41,   42,   43,   44,   45,   40,   47,   40,   40,
   40,   40,   40,   40,   40,   40,   40,   40,   58,   59,
   60,  117,   62,   63,   94,   40,   94,   40,    0,   40,
   40,   40,   40,   40,  308,   41,    0,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   -1,   -1,   -1,   37,   38,   -1,   40,   41,
   42,   43,   44,   45,   -1,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,  124,  125,   58,   59,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,
   -1,   42,   43,   -1,   45,   -1,   47,   -1,   37,   -1,
  216,  217,   -1,   42,   43,   -1,   45,   -1,   47,   60,
   -1,   62,   63,   37,   -1,   -1,   -1,   -1,   42,   43,
   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   37,
   -1,  123,  124,  125,   42,   43,   60,   45,   62,   47,
   -1,   -1,   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   60,   -1,   62,   94,   -1,  273,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   94,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,  302,  303,  304,  305,  306,   -1,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
  320,  321,  322,  323,   -1,  257,  258,  259,  260,  261,
  262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
  302,  303,  304,  305,  306,    0,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
  322,  323,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   37,   38,   -1,   40,   41,   42,   43,   44,
   45,   -1,   47,  314,  315,  316,  317,  318,  319,  320,
  321,   -1,   -1,   58,   59,   60,   -1,   62,   63,   -1,
   -1,  320,  321,    0,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  316,  317,  318,  319,  320,  321,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  318,  319,  320,  321,   -1,   -1,   33,   -1,   -1,   -1,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,
  125,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   60,   -1,   62,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,   -1,
   -1,   -1,   -1,   -1,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,
  305,  306,   -1,  308,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  319,  320,  321,  322,  323,   -1,
  257,  258,  259,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
    0,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,  320,  321,  322,  323,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   38,   -1,
   40,   41,   -1,   43,   44,   45,  316,  317,  318,  319,
  320,  321,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,    0,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   38,   -1,   40,   41,
   -1,   43,   44,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,  124,  125,   58,   59,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   -1,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,  302,  303,  304,  305,  306,   -1,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
  320,  321,  322,  323,   -1,  257,  258,  259,  260,  261,
  262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
  302,  303,  304,  305,  306,    0,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
  322,  323,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   38,   -1,   40,   41,   -1,   -1,   44,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,   58,   59,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   38,   -1,   40,   41,   -1,   -1,   44,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,
  125,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,
   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,
  305,  306,   -1,  308,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  319,  320,  321,  322,  323,   -1,
  257,  258,  259,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
    0,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,  320,  321,  322,  323,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   38,   -1,
   40,   41,   -1,   -1,   44,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,  319,  320,  321,   58,   59,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,    0,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   38,   -1,   40,   41,
   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,  124,  125,   58,   59,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   -1,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,  302,  303,  304,  305,  306,   -1,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
   -1,   -1,  322,  323,   -1,  257,  258,  259,  260,  261,
  262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
  302,  303,  304,  305,  306,    0,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,   -1,   -1,
  322,  323,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   38,   -1,   40,   41,   -1,   -1,   44,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,   58,   59,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   38,   -1,   40,   41,   -1,   -1,   44,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,
  125,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,
   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,
  305,  306,   -1,  308,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  319,   -1,   -1,  322,  323,   -1,
  257,  258,  259,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
    0,  308,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,   -1,   -1,  322,  323,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   38,   -1,
   40,   41,   -1,   -1,   44,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,  319,  320,  321,   58,   59,
   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,    0,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   38,   -1,   40,   41,
   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,  124,  125,   58,   59,   -1,   -1,
   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,
   -1,   -1,   41,   42,   43,   -1,   45,   -1,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,  302,  303,  304,  305,  306,   -1,  308,  309,
  310,  311,  312,  313,  314,  315,  316,  317,   -1,   -1,
   -1,   -1,  322,  323,   -1,  257,  258,  259,  260,  261,
  262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
  302,  303,  304,  305,  306,    0,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,   -1,   -1,   -1,   -1,
  322,  323,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   38,   -1,   40,   41,   -1,   -1,   44,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,   58,   59,   -1,   -1,   -1,   63,   -1,
   -1,   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   38,   -1,   40,   41,   -1,   -1,   44,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,
  125,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,
   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,
  305,  306,   -1,  308,  309,  310,  311,  312,  313,  314,
  315,   -1,   -1,   -1,   -1,   -1,   -1,  322,  323,   -1,
  257,  258,  259,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
    0,  308,  309,  310,  311,  312,  313,  314,  315,   -1,
   -1,   -1,   -1,   -1,   -1,  322,  323,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,
   40,   41,   -1,   -1,   44,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,  319,  320,  321,   58,   59,
   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,    0,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,   41,
   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,   -1,  125,   58,   59,   37,   38,
   -1,   63,   -1,   42,   43,   44,   45,   -1,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,   -1,   -1,
   -1,  123,   -1,  125,    0,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,
   -1,   -1,   -1,   -1,   40,   41,   -1,   -1,   44,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   -1,   -1,   -1,  257,  258,  259,
  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,  297,  298,  299,
  300,  301,  302,  303,  304,  305,  306,   -1,  308,  309,
  310,  311,  312,  313,  314,  315,   -1,  123,   -1,  125,
   -1,   -1,  322,  323,   -1,  257,  258,  259,  260,  261,
  262,  263,  264,  265,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,  297,  298,  299,  300,  301,
  302,  303,  304,  305,  306,   -1,  308,  309,  310,  311,
  312,  313,  314,  315,   -1,    0,   -1,   -1,   -1,   -1,
  322,  323,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   41,   -1,   -1,   44,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,  261,  262,  263,  264,  265,
  266,  267,  268,  269,  270,  271,  272,  273,  274,  275,
  276,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,  302,  303,  304,  305,
  306,    0,  308,  309,  310,  311,  312,  313,  123,   -1,
  125,   -1,   -1,   -1,   -1,   -1,  322,  323,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,
   -1,   40,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,
   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,    0,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,
   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,   -1,  125,   58,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,
  305,  306,  123,  308,  125,    0,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,  323,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   41,   -1,   -1,   44,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,  257,  258,
  259,  260,  261,  262,  263,  264,  265,  266,  267,  268,
  269,  270,  271,  272,  273,  274,  275,  276,  277,  278,
  279,  280,  281,  282,  283,  284,  285,  286,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,  297,  298,
  299,  300,  301,  302,  303,  304,  305,  306,   -1,  308,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,
  125,   -1,   -1,  322,  323,   -1,  257,  258,  259,  260,
  261,  262,  263,  264,  265,  266,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,  302,  303,  304,  305,  306,   -1,  308,   -1,    0,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  322,  323,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,
   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,
  305,  306,  123,  308,  125,    0,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,  323,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,    0,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,
   -1,   -1,   40,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,
  125,   59,   -1,   -1,   -1,   -1,  257,  258,  259,  260,
  261,  262,  263,  264,  265,  266,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,  302,  303,  304,  305,  306,   -1,  308,   -1,    0,
   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,   -1,   -1,
   -1,  322,  323,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,
   -1,   -1,   -1,   -1,   45,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,  262,  263,  264,
  265,  266,  267,  268,  269,  270,  271,  272,  273,  274,
  275,  276,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,  297,  298,  299,  300,  301,  302,  303,  304,
  305,  306,  123,  308,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  322,  323,  257,
  258,  259,  260,  261,  262,  263,  264,  265,  266,  267,
  268,  269,  270,  271,  272,  273,  274,  275,  276,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
  298,  299,  300,  301,  302,  303,  304,  305,  306,   -1,
  308,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  322,  323,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,
  261,  262,  263,  264,  265,  266,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,  297,  298,  299,  300,
  301,  302,  303,  304,  305,  306,  123,   33,  125,   -1,
   -1,   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,   45,
   -1,  322,  323,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   -1,
   -1,   -1,   -1,   40,   -1,   -1,   -1,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  257,  258,  259,  260,  261,  262,  263,  264,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,  302,  303,  304,  305,  306,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  322,  323,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,  261,  262,  263,  264,  265,
  266,  267,  268,  269,  270,  271,  272,  273,  274,  275,
  276,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,  297,  298,  299,  300,  301,  302,  303,  304,  305,
  306,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  257,  258,  259,  260,   -1,   -1,  322,  323,  265,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  297,  298,  299,  300,  301,  302,  303,  304,   10,   11,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  322,  323,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   54,   55,   56,   57,   -1,   59,   -1,   -1,
   -1,   63,   64,   65,   66,   -1,   -1,   -1,   -1,   71,
   72,   73,   74,   75,   76,   77,   78,   79,   80,   81,
   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
   92,   93,   94,   95,   96,   97,   98,   99,  100,  101,
  102,  103,  104,   -1,  106,  107,   -1,  109,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  118,  119,  120,  121,
  122,  123,  124,  125,  126,  127,  128,  129,  130,  131,
  132,  133,  134,  135,  136,  137,  138,  139,  140,  141,
   37,   38,   -1,   -1,   -1,   42,   43,   44,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   60,   -1,   62,   63,   37,   38,   -1,
   -1,   41,   42,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,   37,   38,   -1,   -1,   -1,   42,   43,   44,   45,
   60,   47,   62,   63,   -1,   -1,   -1,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   60,   -1,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  218,  219,   -1,  221,
  222,  223,   -1,   -1,   94,   -1,   -1,  124,  230,   -1,
   -1,   -1,   -1,   -1,   -1,  237,  238,  239,   94,   -1,
  242,  243,   -1,   -1,   -1,   -1,   -1,   -1,  250,  251,
   -1,  253,   -1,  255,  124,   37,   38,   -1,   -1,   -1,
   42,   43,   44,   45,   -1,   47,   -1,   -1,  124,   -1,
   -1,   -1,  274,  275,  276,  277,  278,   -1,   60,   -1,
   62,   63,   37,   38,   -1,   -1,   -1,   42,   43,   44,
   45,   -1,   47,   -1,   -1,  297,   37,   38,   -1,   -1,
   41,   42,   43,   -1,   45,   60,   47,   62,   63,   -1,
   37,   38,   94,   -1,   41,   42,   43,   -1,   45,   60,
   47,   62,   63,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   -1,   45,   60,   47,   62,   63,   -1,   -1,   94,
   -1,   -1,  124,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   37,   38,   94,   -1,   41,   42,   43,   -1,   45,
   -1,   47,   -1,   -1,   -1,   -1,   -1,   94,   -1,  124,
   -1,   -1,   -1,   -1,   60,   -1,   62,   63,   -1,   -1,
   -1,   94,   -1,  124,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,
   -1,  124,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,  320,  321,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
  320,  321,   -1,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,  319,  320,  321,   37,   38,   -1,   -1,
   41,   42,   43,   -1,   45,   -1,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,
   -1,   62,   63,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   -1,   -1,   94,   -1,   -1,   -1,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   94,   -1,  124,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  319,  320,  321,   -1,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,  319,  320,
  321,  124,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,  320,  321,   -1,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,  319,  320,  321,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,  319,  320,  321,   37,   38,   -1,   -1,
   -1,   42,   43,   44,   45,   -1,   47,   -1,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   -1,   45,   60,
   47,   62,   63,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   -1,   45,   60,   47,   62,   63,   -1,   37,   38,
   -1,   -1,   41,   42,   43,   -1,   45,   60,   47,   62,
   63,   -1,   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   60,   -1,   62,   63,   37,   38,   94,   -1,   41,
   42,   43,   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,
   -1,   94,   -1,  124,   -1,   -1,   -1,   -1,   60,   -1,
   62,   63,   -1,   -1,   -1,   94,   -1,  124,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,  319,  320,
  321,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   94,   -1,   -1,  124,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,  319,  320,  321,   37,
   38,   -1,   -1,   41,   42,   43,   -1,   45,   -1,   47,
   -1,   -1,  124,   37,   38,   -1,   -1,   41,   42,   43,
   -1,   45,   60,   47,   62,   63,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,   44,   45,   60,   47,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   60,   -1,   62,   63,   37,   38,   94,   -1,   -1,   42,
   43,   44,   45,   -1,   47,   -1,   -1,   -1,   37,   38,
   94,   -1,   -1,   42,   43,   44,   45,   60,   47,   62,
   63,   -1,   -1,   -1,   94,   -1,  124,   -1,   -1,   -1,
   -1,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   94,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,  319,  320,
  321,  124,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,  320,  321,  124,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,  319,  320,  321,   -1,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
   -1,   37,   38,   -1,   -1,   41,   42,   43,   -1,   45,
   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   60,   -1,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,
   -1,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,  319,  320,  321,   -1,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,  319,  320,  321,  124,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
  320,  321,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,  319,  320,  321,   -1,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,   37,   38,   -1,   -1,   41,   42,   43,
   -1,   45,   -1,   47,   -1,   -1,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,   44,   45,   60,   47,   62,   63,
   -1,   37,   38,   -1,   -1,   -1,   42,   43,   44,   45,
   60,   47,   62,   63,   -1,   37,   38,   -1,   -1,   41,
   42,   43,   -1,   45,   60,   47,   62,   63,   -1,   -1,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,
   62,   63,   37,   38,   94,   -1,   41,   42,   43,   -1,
   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   94,   -1,
  124,   -1,   -1,   -1,   -1,   60,   -1,   62,   63,   -1,
   -1,   -1,   94,   -1,  124,   37,   38,   -1,   -1,   41,
   42,   43,   -1,   45,   -1,   47,   -1,   -1,  124,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   94,
   62,   63,  124,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,  319,  320,  321,   37,   38,   -1,   -1,
   41,   42,   43,   -1,   45,   -1,   47,   -1,   -1,  124,
   37,   38,   94,   -1,   41,   42,   43,   -1,   45,   60,
   47,   62,   63,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   -1,   45,   60,   47,   62,   63,   -1,   -1,   -1,
   -1,   -1,  124,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   37,   38,   94,   -1,   -1,   42,   43,   44,   45,
   -1,   47,   -1,   -1,   -1,   37,   38,   94,   -1,   -1,
   42,   43,   44,   45,   60,   47,   62,   63,   -1,   -1,
   -1,   94,   -1,  124,   -1,   -1,   -1,   -1,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,
   -1,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   94,   -1,   -1,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,  319,  320,  321,  124,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
  320,  321,  124,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,  319,  320,  321,   -1,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  319,  320,  321,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,  319,  320,
  321,   -1,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,  320,  321,   -1,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,  319,  320,  321,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,  319,  320,  321,   -1,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
   37,   38,   -1,   -1,   41,   42,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,
   43,   44,   45,   60,   47,   62,   63,   -1,   37,   38,
   -1,   -1,   41,   42,   43,   -1,   45,   60,   47,   62,
   63,   -1,   37,   38,   -1,   -1,   -1,   42,   43,   -1,
   45,   60,   47,   62,   63,   -1,   -1,   94,   -1,   -1,
   -1,   -1,   -1,   58,   -1,   60,   -1,   62,   63,   37,
   38,   94,   -1,   -1,   42,   43,   44,   45,   -1,   47,
   -1,   -1,   -1,   37,   38,   94,   -1,  124,   42,   43,
   44,   45,   60,   47,   62,   63,   -1,   37,   38,   94,
   -1,  124,   42,   43,   44,   45,   60,   47,   62,   63,
   -1,   37,   38,   -1,   -1,  124,   42,   43,   44,   45,
   60,   47,   62,   63,   -1,   -1,   94,   -1,   -1,  124,
   -1,   -1,   -1,   -1,   60,   -1,   62,   63,   37,   38,
   94,   -1,   -1,   42,   43,   44,   45,   -1,   47,   -1,
   -1,   -1,   -1,   -1,   94,   -1,  124,   -1,   -1,   -1,
   -1,   60,   -1,   62,   63,   -1,   -1,   -1,   94,   -1,
  124,   37,   38,   -1,   -1,   41,   42,   43,   -1,   45,
   -1,   47,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   60,   94,   62,   63,  124,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,   -1,
   45,   -1,   47,   -1,   -1,  124,   -1,   -1,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,
   -1,   -1,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,  320,  321,   -1,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,  319,  320,  321,  124,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,   -1,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  319,  320,  321,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,  319,  320,  321,   -1,  309,  310,  311,  312,  313,
  314,  315,  316,  317,  318,  319,  320,  321,   -1,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
  320,  321,   -1,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,  319,  320,  321,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,  319,  320,  321,   37,   38,   -1,   -1,
   41,   42,   43,   -1,   45,   -1,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,
   -1,   62,   63,   -1,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  319,  320,  321,   37,   38,   -1,
   -1,   41,   42,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,   37,   38,   94,   -1,   41,   42,   43,   -1,   45,
   60,   47,   62,   63,   -1,   37,   38,   -1,   -1,   41,
   42,   43,   -1,   45,   60,   47,   62,   63,   -1,   -1,
   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,   60,   -1,
   62,   63,   37,   38,   94,   -1,   41,   42,   43,   -1,
   45,   -1,   47,   -1,   -1,   -1,   37,   38,   94,   -1,
   41,   42,   43,   -1,   45,   60,   47,   62,   63,   -1,
   -1,   -1,   94,   -1,  124,   -1,   -1,   -1,   -1,   60,
   -1,   62,   63,   -1,   -1,   37,   38,   -1,  124,   41,
   42,   43,   -1,   45,   -1,   47,   -1,   -1,   -1,   94,
   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,   60,   -1,
   62,   63,   -1,   94,   37,   38,   -1,   -1,   41,   42,
   43,   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   -1,   94,  124,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   -1,   45,   -1,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   94,  124,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   41,
   42,   43,   -1,   45,   -1,   47,   -1,   -1,   -1,   -1,
   -1,  124,   -1,   -1,   -1,   -1,   -1,   94,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,  319,  320,
  321,   -1,   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,
   -1,   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
  320,  321,  124,  309,  310,  311,  312,  313,  314,  315,
  316,  317,  318,  319,  320,  321,   -1,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  319,  320,  321,   -1,  309,  310,
  311,  312,  313,  314,  315,  316,  317,  318,  319,  320,
  321,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,  319,  320,  321,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,  320,  321,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  320,  321,
   37,   38,   -1,   -1,   -1,   42,   43,   44,   45,   -1,
   47,   -1,   -1,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   -1,   45,   60,   47,   62,   63,   -1,   37,   38,
   -1,   -1,   41,   42,   43,   -1,   45,   60,   47,   62,
   63,   -1,   37,   38,   -1,   -1,   -1,   42,   43,   -1,
   45,   60,   47,   62,   63,   -1,   -1,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   60,   -1,   62,   63,   37,
   38,   94,   -1,   -1,   42,   43,   -1,   45,   -1,   47,
   -1,   -1,   -1,   -1,   -1,   94,   -1,  124,   -1,   -1,
   -1,   59,   60,   -1,   62,   63,   -1,   37,   38,   94,
   -1,  124,   42,   43,   -1,   45,   -1,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,
   60,   -1,   62,   63,   -1,   -1,   94,   -1,   -1,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   94,   -1,  124,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  309,  310,  311,  312,  313,  314,  315,  316,
  317,  318,  319,  320,  321,   -1,  309,  310,  311,  312,
  313,  314,  315,  316,  317,  318,  319,  320,  321,   -1,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,  320,  321,   -1,  309,  310,  311,  312,  313,  314,
  315,  316,  317,  318,  319,  320,  321,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  309,  310,  311,  312,  313,  314,  315,  316,  317,
  318,  319,  320,  321,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  309,
  310,  311,  312,  313,  314,  315,  316,  317,  318,  319,
  320,  321,
};

#define YYFINAL 1

#ifndef YYDEBUG    
#define YYDEBUG 0 
#endif             
                   
#define YYMAXTOKEN 325

#if YYDEBUG

static char *yyname[] = 
{
"end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
"'!'",0,0,0,"'%'","'&'",0,"'('","')'","'*'","'+'","','","'-'",0,"'/'",0,0,0,0,0,
0,0,0,0,0,"':'","';'","'<'","'='","'>'","'?'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,"'^'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,"'{'","'|'","'}'","'~'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"NUM","STRING","VARIABLE",
"VARSTR","WHILE","IF","PRINT","PRINTLN","IFN","IFS","STRLEN","SUBSTR","REPLACE",
"SUBSTITUTE","TOSTR","TONUM","ABS","ACOS","ASIN","ATAN","ATAN2","CEIL","COS",
"COSH","EXP","FABS","FLOOR","FMOD","FREXP","LDEXP","LOG","LOG10","MODF","POW",
"SIN","SINH","SQRT","CBRT","TAN","TANH","MIN","MAX","RAND","DATE","MATCH","PI",
"SETPREC","GETPREC","COMMENT","EXIT","IFX","ELSE","PLUS_ASSIGN","MINUS_ASSIGN",
"MUL_ASSIGN","DIV_ASSIGN","MOD_ASSIGN","AND","OR","EQ","NE","GE","LE","SHR",
"SHL","PREF_INC","PREF_DEC","UMINUS","BNE",
};


static char *yyrule[] = 
{
"$accept : program",
"$$32767 :",
"program : $$32767 function",
"function : function stmt",
"function :",
"stmt : ';'",
"stmt : COMMENT",
"stmt : expr ';'",
"stmt : PRINT expr ';'",
"stmt : PRINTLN expr ';'",
"stmt : VARIABLE '=' expr",
"stmt : VARSTR '~' expr",
"stmt : WHILE '(' expr ')' stmt",
"stmt : IF '(' expr ')' stmt",
"stmt : IF '(' expr ')' stmt ELSE stmt",
"stmt : '{' stmt_list '}'",
"stmt : EXIT",
"stmt_list : stmt",
"stmt_list : stmt_list stmt",
"expr : NUM",
"expr : STRING",
"expr : VARIABLE",
"expr : VARSTR",
"expr : '(' expr ')'",
"expr : '-' expr",
"expr : expr '+' expr",
"expr : expr '-' expr",
"expr : expr '*' expr",
"expr : expr '/' expr",
"expr : expr '%' expr",
"expr : expr PLUS_ASSIGN expr",
"expr : expr MINUS_ASSIGN expr",
"expr : expr MUL_ASSIGN expr",
"expr : expr DIV_ASSIGN expr",
"expr : expr MOD_ASSIGN expr",
"expr : PREF_INC expr",
"expr : PREF_DEC expr",
"expr : expr '<' expr",
"expr : expr '>' expr",
"expr : expr GE expr",
"expr : expr LE expr",
"expr : expr NE expr",
"expr : expr EQ expr",
"expr : expr AND expr",
"expr : expr OR expr",
"expr : expr '&' expr",
"expr : expr '|' expr",
"expr : '!' expr",
"expr : expr SHR expr",
"expr : expr SHL expr",
"expr : ABS '(' expr ')'",
"expr : ACOS '(' expr ')'",
"expr : ASIN '(' expr ')'",
"expr : ATAN '(' expr ')'",
"expr : ATAN2 '(' expr ',' expr ')'",
"expr : CEIL '(' expr ')'",
"expr : COS '(' expr ')'",
"expr : COSH '(' expr ')'",
"expr : EXP '(' expr ')'",
"expr : FABS '(' expr ')'",
"expr : FLOOR '(' expr ')'",
"expr : FMOD '(' expr ',' expr ')'",
"expr : FREXP '(' expr ',' expr ')'",
"expr : LDEXP '(' expr ',' expr ')'",
"expr : LOG '(' expr ')'",
"expr : LOG10 '(' expr ')'",
"expr : MODF '(' expr ',' expr ')'",
"expr : POW '(' expr ',' expr ')'",
"expr : expr '^' expr",
"expr : SIN '(' expr ')'",
"expr : SINH '(' expr ')'",
"expr : SQRT '(' expr ')'",
"expr : CBRT '(' expr ')'",
"expr : TAN '(' expr ')'",
"expr : TANH '(' expr ')'",
"expr : RAND '(' ')'",
"expr : MIN '(' expr ',' expr ')'",
"expr : MAX '(' expr ',' expr ')'",
"expr : expr '?' expr ':' expr",
"expr : TONUM '(' expr ')'",
"expr : STRLEN '(' expr ')'",
"expr : TOSTR '(' expr ')'",
"expr : SUBSTR '(' expr ',' expr ',' expr ')'",
"expr : REPLACE '(' expr ',' expr ',' expr ',' expr ')'",
"expr : SUBSTITUTE '(' expr ',' expr ',' expr ')'",
"expr : MATCH '(' expr ',' expr ')'",
"expr : DATE '(' expr ')'",
"expr : IFN '(' expr ',' expr ',' expr ')'",
"expr : IFS '(' expr ',' expr ',' expr ')'",
"expr : SETPREC '(' expr ')'",
"expr : GETPREC '(' ')'",
"expr : PI '(' ')'",

};

#endif // YYDEBUG

// Header is empty now                                                      
                                                                            
#define yystacksize YYSTACKSIZE                                             
#define YYABORT goto yyabort                                                
#define YYREJECT goto yyabort                                               
#define YYACCEPT goto yyaccept                                              
#define YYERROR goto yyerrlab                                               
                                                                            
                                                                            
Boascript::Boascript(void* pExtraData)                                                    
{                                                                           
                                                                            
#if YYDEBUG                                                                 
                                                                            
    yydebug=1;                                                              
    if (yys = getenv("YYDEBUG"))                                          
    {                                                                       
        yyn = *yys;                                                         
        if (yyn >= '0' && yyn <= '9')                                       
        {                                                                   
            yydebug = yyn - '0';                                            
        }                                                                   
    }                                                                       
                                                                            
#else                                                                       
                                                                            
  yydebug = 0;                                                              
                                                                            
#endif                                                                      
                                                                            
    yynerrs   = 0;                                                          
    yyerrflag = 0;                                                          
    yychar    = (-1);                                                       
                                                                            
    yyssp     = yyss;                                                       
    yyvsp     = yyvs;                                                       
    *yyssp    = yystate = 0;                                                
}                                                                           
                                                                            
                                                                            
int Boascript::yyparse()                                                           
{                                                                           
                                                                            
yyloop:                                                                     
                                                                            
    if ((yyn = yydefred[yystate])) goto yyreduce;                           
    if (yychar < 0)                                                         
    {                                                                       
        if ((yychar = yylex()) < 0) yychar = 0;                             
                                                                            
#if YYDEBUG                                                                 
                                                                            
        if (yydebug)                                                        
        {                                                                   
            yys = 0;                                                        
            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];                 
            if (!yys) yys = "illegal-symbol";                             
            printf("%sdebug: state %d, reading %d (%s)\n",       
                    YYPREFIX, yystate, yychar, yys);                        
        }                                                                   
                                                                            
#endif                                                                      
                                                                            
    }                                                                       
                                                                            
    if ((yyn = yysindex[yystate]) &&                                        
       ((yyn += yychar) >= 0) &&                                            
       (yyn <= YYTABLESIZE) &&                                              
       (yycheck[yyn] == yychar))                                            
    {                                                                       
                                                                            
#if YYDEBUG                                                                 
                                                                            
        if (yydebug)                                                        
          {                                                                 
            printf("%sdebug: state %d, shifting to state %d\n",    
                    YYPREFIX, yystate, yytable[yyn]);                       
          }                                                                 
                                                                            
#endif                                                                      
                                                                            
        if (yyssp >= yyss + yystacksize - 1)                                
        {                                                                   
            goto yyoverflow;                                                
        }                                                                   
                                                                            
        *++yyssp = yystate = yytable[yyn];                                  
        *++yyvsp = yylval;                                                  
        yychar = (-1);                                                      
        if (yyerrflag > 0)  --yyerrflag;                                    
        goto yyloop;                                                        
    }                                                                       
    if ((yyn = yyrindex[yystate]) && (yyn += yychar) >= 0 &&                
            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)                   
    {                                                                       
        yyn = yytable[yyn];                                                 
        goto yyreduce;                                                      
    }                                                                       
    if (yyerrflag) goto yyinrecovery;                                       
                                                                            
#ifdef lint                                                                 
    goto yynewerror;                                                        
                                                                            
yynewerror:                                                                 
#endif                                                                      
                                                                            
    yyerror("syntax error");                                              
                                                                            
#ifdef lint                                                                 
    goto yyerrlab;                                                          
                                                                            
yyerrlab:                                                                   
#endif                                                                      
                                                                            
    ++yynerrs;                                                              
                                                                            
yyinrecovery:                                                               
                                                                            
    if (yyerrflag < 3)                                                      
    {                                                                       
        yyerrflag = 3;                                                      
        for (;;)                                                            
        {                                                                   
            if ((yyn = yysindex[*yyssp]) && (yyn += YYERRCODE) >= 0 &&      
                 yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)           
            {                                                               
#if YYDEBUG                                                                 
                if (yydebug)                                                
                {                                                           
                    printf("%sdebug: state %d, error recovery        \
                           shifting to state %d\n",                     
                           YYPREFIX,*yyssp, yytable[yyn]);                  
                }                                                           
#endif                                                                      
                if (yyssp >= yyss + yystacksize - 1)                        
                {                                                           
                    goto yyoverflow;                                        
                }                                                           
                *++yyssp = yystate = yytable[yyn];                          
                *++yyvsp = yylval;                                          
                goto yyloop;                                                
            }                                                               
            else                                                            
            {                                                               
                                                                            
#if YYDEBUG                                                                 
                                                                            
                if (yydebug)                                                
                {                                                           
                    printf("%sdebug: error recovery discarding         \
                             state %d\n",                               
                            YYPREFIX, *yyssp);                              
                }                                                           
                                                                            
#endif                                                                      
                if (yyssp <= yyss) goto yyabort;                            
                --yyssp;                                                    
                --yyvsp;                                                    
            }                                                               
        }                                                                   
    }                                                                       
    else                                                                    
    {                                                                       
        if (yychar == 0) goto yyabort;                                      
                                                                            
#if YYDEBUG                                                                 
                                                                            
        if (yydebug)                                                        
        {                                                                   
            yys = 0;                                                        
            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];                 
            if (!yys) yys = "illegal-symbol";                             
            printf("%sdebug: state %d, error recovery discards token \
                   %d(%s)\n",                                         
                    YYPREFIX, yystate, yychar, yys);                        
        }                                                                   
                                                                            
#endif                                                                      
                                                                            
        yychar = (-1);                                                      
        goto yyloop;                                                        
    }                                                                       
                                                                            
yyreduce:                                                                   
                                                                            
#if YYDEBUG                                                                 
                                                                            
    if (yydebug)                                                            
    {                                                                       
        printf("%sdebug: state %d, reducing by rule %d (%s)\n",  
                YYPREFIX, yystate, yyn, yyrule[yyn]);                       
    }                                                                       
                                                                            
#endif                                                                      
                                                                            
    yym = yylen[yyn];                                                       
    yyval = yyvsp[1-yym];                                                   
                                                                            
    switch (yyn)                                                            
    {                                                                       
    case 2:
#line 207 "src/Boascript.y"                                                             
{ return 0;                          }
            break;
    case 3:
#line 210 "src/Boascript.y"                                                             
{ ex( yyvsp[0].nPtr); freeNode( yyvsp[0].nPtr);              }
            break;
    case 5:
#line 215 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(';', 2, 0, 0);            }
            break;
    case 6:
#line 216 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(COMMENT, 2, 0, 0);        }
            break;
    case 7:
#line 217 "src/Boascript.y"                                                             
{             yyval.nPtr =  yyvsp[-1].nPtr;                           }
            break;
    case 8:
#line 218 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(PRINT, 1,  yyvsp[-1].nPtr);            }
            break;
    case 9:
#line 219 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(PRINTLN, 1,  yyvsp[-1].nPtr);          }
            break;
    case 10:
#line 220 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('=', 2, id( yyvsp[-2].sIndex),  yyvsp[0].nPtr);      }
            break;
    case 11:
#line 221 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('~', 2, setVar( yyvsp[-2].varName),  yyvsp[0].nPtr);  }
            break;
    case 12:
#line 222 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(WHILE, 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);     }
            break;
    case 13:
#line 224 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(IF, 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);           }
            break;
    case 14:
#line 226 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(IF, 3,  yyvsp[-4].nPtr,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);       }
            break;
    case 15:
#line 227 "src/Boascript.y"                                                             
{             yyval.nPtr =  yyvsp[-1].nPtr;                           }
            break;
    case 16:
#line 228 "src/Boascript.y"                                                             
{ exit(0);                           }
            break;
    case 17:
#line 232 "src/Boascript.y"                                                             
{             yyval.nPtr =  yyvsp[0].nPtr;                           }
            break;
    case 18:
#line 233 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(';', 2,  yyvsp[-1].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 19:
#line 237 "src/Boascript.y"                                                             
{             yyval.nPtr = conD( yyvsp[0].Value);                     }
            break;
    case 20:
#line 238 "src/Boascript.y"                                                             
{             yyval.nPtr = conS( yyvsp[0].Value);                     }
            break;
    case 21:
#line 239 "src/Boascript.y"                                                             
{             yyval.nPtr = id( yyvsp[0].sIndex);                       }
            break;
    case 22:
#line 240 "src/Boascript.y"                                                             
{             yyval.nPtr = getVar( yyvsp[0].varName);                   }
            break;
    case 23:
#line 241 "src/Boascript.y"                                                             
{             yyval.nPtr =  yyvsp[-1].nPtr;                           }
            break;
    case 24:
#line 242 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(UMINUS, 1,  yyvsp[0].nPtr);           }
            break;
    case 25:
#line 243 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('+', 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 26:
#line 244 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('-', 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 27:
#line 245 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('*', 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 28:
#line 246 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('/', 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 29:
#line 247 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('%', 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 30:
#line 248 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(PLUS_ASSIGN,  2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr); }
            break;
    case 31:
#line 249 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(MINUS_ASSIGN, 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr); }
            break;
    case 32:
#line 250 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(MUL_ASSIGN,   2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr); }
            break;
    case 33:
#line 251 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(DIV_ASSIGN,   2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr); }
            break;
    case 34:
#line 252 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(MOD_ASSIGN,   2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr); }
            break;
    case 35:
#line 253 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(PREF_INC, 1,  yyvsp[0].nPtr);         }
            break;
    case 36:
#line 254 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(PREF_DEC, 1,  yyvsp[0].nPtr);         }
            break;
    case 37:
#line 255 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('<', 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 38:
#line 256 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('>', 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 39:
#line 257 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(GE , 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 40:
#line 258 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(LE , 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 41:
#line 259 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(NE , 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 42:
#line 260 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(EQ , 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 43:
#line 261 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(AND, 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 44:
#line 262 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(OR , 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 45:
#line 263 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('&', 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 46:
#line 264 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('|', 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 47:
#line 265 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(BNE, 1,  yyvsp[0].nPtr);              }
            break;
    case 48:
#line 266 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(SHR, 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 49:
#line 267 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(SHL, 2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 50:
#line 268 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(ABS , 1,  yyvsp[-1].nPtr);             }
            break;
    case 51:
#line 269 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(ACOS, 1,  yyvsp[-1].nPtr);             }
            break;
    case 52:
#line 270 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(ASIN, 1,  yyvsp[-1].nPtr);             }
            break;
    case 53:
#line 271 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(ATAN, 1,  yyvsp[-1].nPtr);             }
            break;
    case 54:
#line 272 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(ATAN2, 2,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);   }
            break;
    case 55:
#line 273 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(CEIL, 1,  yyvsp[-1].nPtr);             }
            break;
    case 56:
#line 274 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(COS , 1,  yyvsp[-1].nPtr);             }
            break;
    case 57:
#line 275 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(COSH, 1,  yyvsp[-1].nPtr);             }
            break;
    case 58:
#line 276 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(EXP , 1,  yyvsp[-1].nPtr);             }
            break;
    case 59:
#line 277 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(FABS, 1,  yyvsp[-1].nPtr);             }
            break;
    case 60:
#line 278 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(FLOOR,1,  yyvsp[-1].nPtr);             }
            break;
    case 61:
#line 279 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(FMOD, 2,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);    }
            break;
    case 62:
#line 280 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(FREXP,2,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);    }
            break;
    case 63:
#line 281 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(LDEXP,2,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);    }
            break;
    case 64:
#line 282 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(LOG , 1,  yyvsp[-1].nPtr);             }
            break;
    case 65:
#line 283 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(LOG10,1, yyvsp[-1].nPtr);              }
            break;
    case 66:
#line 284 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(MODF,2,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);     }
            break;
    case 67:
#line 285 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(POW ,2,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);     }
            break;
    case 68:
#line 286 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(POW ,2,  yyvsp[-2].nPtr,  yyvsp[0].nPtr);          }
            break;
    case 69:
#line 287 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(SIN , 1,  yyvsp[-1].nPtr);             }
            break;
    case 70:
#line 288 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(SINH, 1,  yyvsp[-1].nPtr);             }
            break;
    case 71:
#line 289 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(SQRT, 1,  yyvsp[-1].nPtr);             }
            break;
    case 72:
#line 290 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(CBRT, 1,  yyvsp[-1].nPtr);             }
            break;
    case 73:
#line 291 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(TAN , 1,  yyvsp[-1].nPtr);             }
            break;
    case 74:
#line 292 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(TANH, 1,  yyvsp[-1].nPtr);             }
            break;
    case 75:
#line 293 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(RAND, 0, 0);              }
            break;
    case 76:
#line 294 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(MIN, 2,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);     }
            break;
    case 77:
#line 295 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(MAX, 2,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);     }
            break;
    case 78:
#line 296 "src/Boascript.y"                                                             
{             yyval.nPtr = opr('?', 3,  yyvsp[-4].nPtr,  yyvsp[-2].nPtr,  yyvsp[0].nPtr); }
            break;
    case 79:
#line 297 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(TONUM,  1,  yyvsp[-1].nPtr);           }
            break;
    case 80:
#line 298 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(STRLEN, 1,  yyvsp[-1].nPtr);           }
            break;
    case 81:
#line 299 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(TOSTR, 1,  yyvsp[-1].nPtr);            }
            break;
    case 82:
#line 301 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(SUBSTR,    3,  yyvsp[-5].nPtr,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);                   }
            break;
    case 83:
#line 303 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(REPLACE,   4,  yyvsp[-7].nPtr,  yyvsp[-5].nPtr,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);               }
            break;
    case 84:
#line 305 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(SUBSTITUTE,3,  yyvsp[-5].nPtr,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);                   }
            break;
    case 85:
#line 307 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(MATCH,     2,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);                       }
            break;
    case 86:
#line 308 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(DATE, 1,  yyvsp[-1].nPtr);             }
            break;
    case 87:
#line 311 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(IFN, 3,  yyvsp[-5].nPtr,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);                         }
            break;
    case 88:
#line 313 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(IFN, 3,  yyvsp[-5].nPtr,  yyvsp[-3].nPtr,  yyvsp[-1].nPtr);                         }
            break;
    case 89:
#line 314 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(SETPREC, 1,  yyvsp[-1].nPtr);          }
            break;
    case 90:
#line 315 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(GETPREC, 0, 0);           }
            break;
    case 91:
#line 316 "src/Boascript.y"                                                             
{             yyval.nPtr = opr(PI, 0, 0);                }
            break;
#line 3795 "Boascript.tab.cpp"                                                             
    }                                                                       
                                                                            
    yyssp -= yym;                                                           
    yystate = *yyssp;                                                       
    yyvsp -= yym;                                                           
    yym = yylhs[yyn];                                                       
    if (yystate == 0 && yym == 0)                                           
    {                                                                       
                                                                            
#if YYDEBUG                                                                 
                                                                            
        if (yydebug)                                                        
        {                                                                   
            printf("%sdebug: after reduction, shifting from state 0 to \
                     state %d\n", YYPREFIX, YYFINAL);                   
        }                                                                   
                                                                            
#endif                                                                      
                                                                            
        yystate = YYFINAL;                                                  
        *++yyssp = YYFINAL;                                                 
        *++yyvsp = yyval;                                                   
        if (yychar < 0)                                                     
        {                                                                   
            if ((yychar = yylex()) < 0)                                     
            {                                                               
                yychar = 0;                                                 
            }                                                               
                                                                            
#if YYDEBUG                                                                 
                                                                            
            if (yydebug)                                                    
            {                                                               
                yys = 0;                                                    
                if (yychar <= YYMAXTOKEN) yys = yyname[yychar];             
                if (!yys)                                                   
                {                                                           
                    yys = "illegal-symbol";                               
                }                                                           
                printf("%sdebug: state %d, reading %d (%s)\n",   
                         YYPREFIX, YYFINAL, yychar, yys);                   
            }                                                               
                                                                            
#endif                                                                      
                                                                            
        }                                                                   
        if (yychar == 0) goto yyaccept;                                     
        goto yyloop;                                                        
    }                                                                       
                                                                            
    if ((yyn = yygindex[yym]) && (yyn += yystate) >= 0 &&                   
            yyn <= YYTABLESIZE && yycheck[yyn] == yystate)                  
    {                                                                       
        yystate = yytable[yyn];                                             
    }                                                                       
    else                                                                    
    {                                                                       
        yystate = yydgoto[yym];                                             
    }                                                                       
                                                                            
#if YYDEBUG                                                                 
                                                                            
    if (yydebug)                                                            
    {                                                                       
        printf("%sdebug: after reduction, shifting from state %d     \
                 to state %d\n", YYPREFIX, *yyssp, yystate);            
    }                                                                       
                                                                            
#endif                                                                      
                                                                            
    if (yyssp >= yyss + yystacksize - 1)                                    
    {                                                                       
        goto yyoverflow;                                                    
    }                                                                       
                                                                            
    *++yyssp = yystate;                                                     
    *++yyvsp = yyval;                                                       
    goto yyloop;                                                            
                                                                            
yyoverflow:                                                                 
                                                                            
    yyerror("yacc stack overflow");                                       
                                                                            
yyabort:                                                                    
                                                                            
    return (1);                                                             
                                                                            
yyaccept:                                                                   
                                                                            
    return (0);                                                             
}                                                                           
                                                                            
                                                                            
YYSTYPE* Boascript::getLVal()                                                      
{                                                                           
    return &yylval;                                                         
}                                                                           
                                                                            
